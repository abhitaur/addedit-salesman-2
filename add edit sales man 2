@extends('layouts.admin')
@section('content')
<div class="relative md:ml-64  min-h-screen px-4">
    <nav class="  w-full z-10  md:flex-row md:flex-nowrap md:justify-start flex items-center ">
        <div class="w-full mx-autp items-center flex justify-between md:flex-nowrap flex-wrap my-6 ">
            <div>
                <h1 class="text-2xl  text-black ">
                    {{ !empty($saleperson) ? 'Edit' : 'Add'}} Sale Person
                </h1>
            </div>

            <div>
                <a href="{{ route('admin.sale-person') }}"
                    class=" bg-yellow text-black hover:bg-black  hover:black hover:text-white focus:ring-4 focus:outline-none focus:ring-rose-300 font-bold rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center">
                    Back
                </a>
            </div>
        </div>
    </nav>

    <div class="relative  bg-white p-4 shadow-md  rounded-md border-t border-orange-300">
        <form class="w-full  " action="{{ route('admin.sale-person-save') }}" method="POST" x-data="propertyForm" @submit.prevent="submitForm" id="property-form">
            @csrf
            <input type="hidden" name="id" value="{{ $saleperson?->id }}">

            <div class="flex flex-wrap">
                <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        Store
                    </label>
                    <select id="store_id" name="store_id"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                        required x-model="store_id.value"
                        x-bind:class="{ 'invalid': store_id.errorMessage && store_id.blurred }"
                        data-rules='["required"]' @blur="blur" @input="input">

                        <option value="">Select Store</option>
                        @foreach ($store as $key => $value)
                        <option value="{{ $value->id }}">
                            {{ $value->store_name }}
                        </option>
                        @endforeach
                    </select>
                    @error('store_id')
                    <p class="text-sm text-red-500"> {{ $message }}</p>
                    @enderror
                    <p x-show="store_id.errorMessage && store_id.blurred"
                        x-text="store_id.errorMessage"
                        class="flex items-center mt-1 ml-1 text-xs font-medium tracking-wide text-red-500"></p>
                </div>

                <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        First Name
                    </label>
                    <input type="text" id="first_name" name="first_name"
                        value="{{ old('first_name') ?? $saleperson?->salesPerson?->first_name }}"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                        required x-model="first_name.value"
                        x-bind:class="{ 'invalid': first_name.errorMessage && first_name.blurred }"
                        data-rules='["required"]' @blur="blur" @input="input">
                    @error('first_name')
                    <p class="text-sm text-red-500"> {{ $message }}</p>
                    @enderror
                    <p x-show="first_name.errorMessage && first_name.blurred"
                        x-text="first_name.errorMessage"
                        class="flex items-center mt-1 ml-1 text-xs font-medium tracking-wide text-red-500"></p>
                </div>

                <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        Last Name
                    </label>
                    <input type="text" id="last_name" name="last_name" value="{{ old('last_name')??$saleperson?->salesPerson?->last_name }}"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                        required x-model="last_name.value"
                        x-bind:class="{ 'invalid': last_name.errorMessage && last_name.blurred }"
                        data-rules='["required"]' @blur="blur" @input="input">
                    @error('last_name')
                    <p class="text-sm text-red-500"> {{ $message }}</p>
                    @enderror
                    <p x-show="last_name.errorMessage && last_name.blurred"
                        x-text="last_name.errorMessage"
                        class="flex items-center mt-1 ml-1 text-xs font-medium tracking-wide text-red-500"></p>
                </div>

                <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        Email
                    </label>
                    <input type="email" id="email" name="email" value="{{ old('email')??$saleperson?->email }}"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                        required x-model="email.value"
                        x-bind:class="{ 'invalid': email.errorMessage && email.blurred }"
                        data-rules='["required"]' @blur="blur" @input="input">

                    @error('email')
                    <p class="text-sm text-red-500"> {{ $message }}</p>
                    @enderror
                    <p x-show="email.errorMessage && email.blurred"
                        x-text="email.errorMessage"
                        class="flex items-center mt-1 ml-1 text-xs font-medium tracking-wide text-red-500"></p>
                </div>
                <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        Phone <span class="italic">(It's Also Password)</span>
                    </label>
                    <input type="text" id="phone" name="phone" onkeypress="isNumber(event)" maxlength="10"
                        value="{{ old('phone')??$saleperson?->salesPerson?->phone }}"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                        required x-model="phone.value"
                        x-bind:class="{ 'invalid': phone.errorMessage && phone.blurred }"
                        data-rules='["required"]' @blur="blur" @input="input">
                    @error('phone')
                    <p class="text-sm text-red-500"> {{ $message }}</p>
                    @enderror
                    <p x-show="phone.errorMessage && phone.blurred"
                        x-text="phone.errorMessage"
                        class="flex items-center mt-1 ml-1 text-xs font-medium tracking-wide text-red-500"></p>
                </div>

            


                <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        User Name
                    </label>
                    <input type="text" id="user_name" name="user_name" value="{{ old('user_name')??$saleperson?->user_name }}"
                        class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                        required x-model="user_name.value"
                        x-bind:class="{ 'invalid': user_name.errorMessage && user_name.blurred }"
                        data-rules='["required"]' @blur="blur" @input="input">

                    @error('user_name')
                    <p class="text-sm text-red-500"> {{ $message }}</p>
                    @enderror
                    <p x-show="user_name.errorMessage && user_name.blurred"
                        x-text="user_name.errorMessage"
                        class="flex items-center mt-1 ml-1 text-xs font-medium tracking-wide text-red-500"></p>
                </div>
                {{-- <div class="w-full md:w-1/3 px-2 mb-4">
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 ">
                        Date of birth
                    </label>
                    <input type="date" id="dob" name="dob" value="{{ old('dob')??$saleperson?->salesPerson?->dob }}"
                class="bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 "
                required x-model="store_id.value"
                x-bind:class="{ 'invalid': dob.errorMessage && dob.blurred }"
                data-rules='["required"]' @blur="blur" @input="input">

                @error('dob')
                <p class="text-sm text-red-500"> {{ $message }}</p>
                @enderror
            </div> --}}


    </div>

    <div class="  w-full text-right">
        <button type="button"
            class="border border-red-500 text-red-500 font-bold bg-red-100 hover:text-white hover:bg-red-500 focus:ring-4 focus:outline-none focus:ring-rose-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center  ">Cancel</button>


        <button type="submit"
            class="border border-green-500  font-bold bg-green-100 text-green-500 hover:text-white hover:bg-green-500 focus:ring-4 focus:outline-none focus:ring-green-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center  ">Submit</button>


    </div>

    </form>
</div>
</div>
@endsection

@section('scripts')
<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelector('#store_id').addEventListener('change', (event) => {
            let storeId = event.target.value;
            let userName = document.querySelector('#user_name').value;
            let split_userName = userName.split('-');

            split_userName[0] = storeId;
            document.querySelector('#user_name').value = split_userName.join('-') +
                `${split_userName.length>1?'':'-'}`;


        })
    })
</script>
<script>
    function propertyForm() {
        let store_id_msg = 'Store Name is required';
        let first_name_msg = "First Name is required";
        let last_name_msg = "Last Name is required";
        let email_msg = "Email is required";
        let phone_msg = "Phone is required";
        let user_name_msg = "User Name is required";
        // let dob_msg = "Date Of Birth is required";





        return {

            store_id: {
                value: {
                    !!json_encode($saleperson ? - > salesPerson ? - > store_id) !!
                },
                errorMessage: '',
                blurred: false
            },

            store_id: {
                value: {
                    !!json_encode($saleperson ? - > salesPerson ? - > store_id) !!
                },
                errorMessage: '',
                blurred: false
            },
            first_name: {
                value: {
                    !!json_encode($saleperson ? - > salesPerson ? - > first_name) !!
                },
                errorMessage: '',
                blurred: false
            },
            last_name: {
                value: {
                    !!json_encode($saleperson ? - > salesPerson ? - > last_name) !!
                },
                errorMessage: '',
                blurred: false
            },
            email: {
                value: {
                    !!json_encode($saleperson ? - > email) !!
                },
                errorMessage: '',
                blurred: false
            },
            phone: {
                value: {
                    !!json_encode($saleperson ? - > salesPerson ? - > phone) !!
                },
                errorMessage: '',
                blurred: false
            },
            user_name: {
                value: {
                    !!json_encode($saleperson ? - > user_name) !!
                },
                errorMessage: '',
                blurred: false
            },
            // dob: {
            //     value: '',
            //     errorMessage: '',
            //     blurred: false
            // },


            validateField(field) {
                const rules = this.rules[field];
                const value = this.field;
                const errorMessage = Iodine.isValid(value, rules);
                this.errors[field] = errorMessage ? Iodine.getErrorMessage(errorMessage) : '';
            },

            blur(event) {
                let ele = event.target;
                this[ele.name].blurred = true;
                let rules = JSON.parse(ele.dataset.rules);
                this.getErrorMess(this[ele.name].value, rules, ele.getAttribute('name'));

            },
            input(event) {
                let ele = event.target;
                this[ele.name].value = ele.value;
                let rules = JSON.parse(ele.dataset.rules);
                this.getErrorMess(this[ele.name].value, rules, ele.getAttribute('name'));
            },
            submitForm(event) {

                let inputs = [...this.$el.querySelectorAll(
                    "input[data-rules], textarea[data-rules], select[data-rules]")];
                let valid = true;

                inputs.forEach((res, index) => {
                    if (Iodine.is(res.value, JSON.parse(res.dataset.rules)) !== true) {
                        let rules = JSON.parse(res.dataset.rules);


                        this.getErrorMess(res.value, rules, res.getAttribute('name'));
                        this[res.name].blurred = true;
                        valid = false;
                        if (index < 2) {
                            window.scrollTo({
                                top: 0,
                                behavior: 'smooth'
                            });
                        }
                        event.preventDefault();
                    }
                });
                if (valid) {
                    document.querySelector('#property-form').submit();
                }
            },
            getErrorMess(value, rules, name) {

                let isValid = Iodine.is(value, rules);
                if (isValid !== true) {
                    // if (name == 'property_name') {
                    //     this[name].errorMessage = property_name_msg;
                    // }

                    if (name == 'store_id') {
                        this[name].errorMessage = store_id_msg;
                    }
                    if (name == 'first_name') {
                        this[name].errorMessage = first_name_msg;
                    }
                    if (name == 'last_name') {
                        this[name].errorMessage = last_name_msg;
                    }
                    if (name == 'email') {
                        this[name].errorMessage = email_msg;
                    }
                    if (name == 'phone') {
                        this[name].errorMessage = phone_msg;
                    }
                    if (name == 'user_name') {
                        this[name].errorMessage = user_name_msg;
                    }
                    // if (name == 'dob') {
                    //     this[name].errorMessage = dob_msg;
                    // }




                    return Iodine.getErrorMessage(isValid, {
                        field: name
                    });



                } else {
                    this[name].errorMessage = '';
                }
            },

        };
    }
</script>
@endsection
